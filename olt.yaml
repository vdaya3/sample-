########################################
# 1. Elasticsearch
########################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
          env:
            - name: discovery.type
              value: single-node
            - name: xpack.security.enabled
              value: "false"
          ports:
            - containerPort: 9200
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
spec:
  ports:
    - port: 9200
      targetPort: 9200
  selector:
    app: elasticsearch

########################################
# 2. Grafana Tempo
########################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: tempo-config
data:
  config.yaml: |
    server:
      http_listen_port: 3200
      grpc_listen_port: 4317
    distributor:
      receivers:
        otlp:
          protocols:
            grpc:
    ingester:
      trace_idle_period: 10s
      max_block_duration: 5m
    compactor:
      compaction:
        block_retention: 48h
    storage:
      trace:
        backend: local
        local:
          path: /tmp/tempo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tempo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tempo
  template:
    metadata:
      labels:
        app: tempo
    spec:
      containers:
        - name: tempo
          image: grafana/tempo:2.5.0
          args:
            - "-config.file=/etc/tempo/config.yaml"
          volumeMounts:
            - name: tempo-config
              mountPath: /etc/tempo
          ports:
            - containerPort: 4317
      volumes:
        - name: tempo-config
          configMap:
            name: tempo-config
---
apiVersion: v1
kind: Service
metadata:
  name: tempo
spec:
  ports:
    - port: 4317
      targetPort: 4317
  selector:
    app: tempo

########################################
# 3. Prometheus
########################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: "otel-collector"
        static_configs:
          - targets: ["otel-collector:8889"]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.45.0
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
          ports:
            - containerPort: 9090
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  ports:
    - port: 9090
      targetPort: 9090
  selector:
    app: prometheus

########################################
# 4. OpenTelemetry Collector
########################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
data:
  otel-collector-config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
    processors:
      batch:
    exporters:
      elasticsearch:
        endpoints: ["http://elasticsearch:9200"]
        logs_index: "spring-boot-logs"
        tls:
          insecure: true
      otlp/tempo:
        endpoint: tempo:4317
        tls:
          insecure: true
      prometheus:
        endpoint: "0.0.0.0:8889"
    service:
      pipelines:
        logs:
          receivers: [otlp]
          processors: [batch]
          exporters: [elasticsearch]
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlp/tempo]
        metrics:
          receivers: [otlp]
          processors: [batch]
          exporters: [prometheus]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: otel-collector
  template:
    metadata:
      labels:
        app: otel-collector
    spec:
      containers:
        - name: otel-collector
          image: otel/opentelemetry-collector:0.104.0
          args: ["--config=/etc/otel/config/otel-collector-config.yaml"]
          volumeMounts:
            - name: config
              mountPath: /etc/otel/config
          ports:
            - name: otlp-grpc
              containerPort: 4317
            - name: otlp-http
              containerPort: 4318
            - name: prom-metrics
              containerPort: 8889
      volumes:
        - name: config
          configMap:
            name: otel-collector-config
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
spec:
  ports:
    - name: otlp-grpc
      port: 4317
    - name: otlp-http
      port: 4318
    - name: prom-metrics
      port: 8889
  selector:
    app: otel-collector